/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutLayout2Import } from './routes/_layout/_layout-2'
import { Route as AuthedNewComponentImport } from './routes/_authed/new-component'
import { Route as AuthedMyComponentsImport } from './routes/_authed/my-components'
import { Route as LayoutLayout2LayoutBImport } from './routes/_layout/_layout-2/layout-b'
import { Route as LayoutLayout2LayoutAImport } from './routes/_layout/_layout-2/layout-a'
import { Route as AuthedEditComponentIdImport } from './routes/_authed/edit.component.$id'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutLayout2Route = LayoutLayout2Import.update({
  id: '/_layout-2',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthedNewComponentRoute = AuthedNewComponentImport.update({
  id: '/new-component',
  path: '/new-component',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedMyComponentsRoute = AuthedMyComponentsImport.update({
  id: '/my-components',
  path: '/my-components',
  getParentRoute: () => AuthedRoute,
} as any)

const LayoutLayout2LayoutBRoute = LayoutLayout2LayoutBImport.update({
  id: '/layout-b',
  path: '/layout-b',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const LayoutLayout2LayoutARoute = LayoutLayout2LayoutAImport.update({
  id: '/layout-a',
  path: '/layout-a',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const AuthedEditComponentIdRoute = AuthedEditComponentIdImport.update({
  id: '/edit/component/$id',
  path: '/edit/component/$id',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authed/my-components': {
      id: '/_authed/my-components'
      path: '/my-components'
      fullPath: '/my-components'
      preLoaderRoute: typeof AuthedMyComponentsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/new-component': {
      id: '/_authed/new-component'
      path: '/new-component'
      fullPath: '/new-component'
      preLoaderRoute: typeof AuthedNewComponentImport
      parentRoute: typeof AuthedImport
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutLayout2Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof LayoutLayout2LayoutAImport
      parentRoute: typeof LayoutLayout2Import
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof LayoutLayout2LayoutBImport
      parentRoute: typeof LayoutLayout2Import
    }
    '/_authed/edit/component/$id': {
      id: '/_authed/edit/component/$id'
      path: '/edit/component/$id'
      fullPath: '/edit/component/$id'
      preLoaderRoute: typeof AuthedEditComponentIdImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedMyComponentsRoute: typeof AuthedMyComponentsRoute
  AuthedNewComponentRoute: typeof AuthedNewComponentRoute
  AuthedEditComponentIdRoute: typeof AuthedEditComponentIdRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedMyComponentsRoute: AuthedMyComponentsRoute,
  AuthedNewComponentRoute: AuthedNewComponentRoute,
  AuthedEditComponentIdRoute: AuthedEditComponentIdRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface LayoutLayout2RouteChildren {
  LayoutLayout2LayoutARoute: typeof LayoutLayout2LayoutARoute
  LayoutLayout2LayoutBRoute: typeof LayoutLayout2LayoutBRoute
}

const LayoutLayout2RouteChildren: LayoutLayout2RouteChildren = {
  LayoutLayout2LayoutARoute: LayoutLayout2LayoutARoute,
  LayoutLayout2LayoutBRoute: LayoutLayout2LayoutBRoute,
}

const LayoutLayout2RouteWithChildren = LayoutLayout2Route._addFileChildren(
  LayoutLayout2RouteChildren,
)

interface LayoutRouteChildren {
  LayoutLayout2Route: typeof LayoutLayout2RouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLayout2Route: LayoutLayout2RouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/my-components': typeof AuthedMyComponentsRoute
  '/new-component': typeof AuthedNewComponentRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/edit/component/$id': typeof AuthedEditComponentIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/my-components': typeof AuthedMyComponentsRoute
  '/new-component': typeof AuthedNewComponentRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/edit/component/$id': typeof AuthedEditComponentIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/_authed/my-components': typeof AuthedMyComponentsRoute
  '/_authed/new-component': typeof AuthedNewComponentRoute
  '/_layout/_layout-2': typeof LayoutLayout2RouteWithChildren
  '/_layout/_layout-2/layout-a': typeof LayoutLayout2LayoutARoute
  '/_layout/_layout-2/layout-b': typeof LayoutLayout2LayoutBRoute
  '/_authed/edit/component/$id': typeof AuthedEditComponentIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/my-components'
    | '/new-component'
    | '/layout-a'
    | '/layout-b'
    | '/edit/component/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/my-components'
    | '/new-component'
    | '/layout-a'
    | '/layout-b'
    | '/edit/component/$id'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_layout'
    | '/_authed/my-components'
    | '/_authed/new-component'
    | '/_layout/_layout-2'
    | '/_layout/_layout-2/layout-a'
    | '/_layout/_layout-2/layout-b'
    | '/_authed/edit/component/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/my-components",
        "/_authed/new-component",
        "/_authed/edit/component/$id"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_layout-2"
      ]
    },
    "/_authed/my-components": {
      "filePath": "_authed/my-components.tsx",
      "parent": "/_authed"
    },
    "/_authed/new-component": {
      "filePath": "_authed/new-component.tsx",
      "parent": "/_authed"
    },
    "/_layout/_layout-2": {
      "filePath": "_layout/_layout-2.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_layout-2/layout-a",
        "/_layout/_layout-2/layout-b"
      ]
    },
    "/_layout/_layout-2/layout-a": {
      "filePath": "_layout/_layout-2/layout-a.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_layout/_layout-2/layout-b": {
      "filePath": "_layout/_layout-2/layout-b.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_authed/edit/component/$id": {
      "filePath": "_authed/edit.component.$id.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
